name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [17]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ matrix.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ matrix.os }}-

      - name: Grant execute permission for Gradle wrapper (if on Unix)
        if: runner.os != 'Windows'
        run: chmod +x gradlew

      - name: Build the project
        run: ./gradlew build
        shell: bash

      - name: Run Checkstyle
        run: ./gradlew checkstyle
        shell: bash

      - name: Upload Checkstyle Reports
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report-${{ matrix.os }}
          path: |
            **/build/reports/checkstyle/*.html
            **/build/reports/checkstyle/*.xml

      - name: Run tests and generate JaCoCo report
        run: ./gradlew test jacocoTestReport
        shell: bash

      - name: Upload JaCoCo Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-${{ matrix.os }}
          path: headless/build/reports/jacoco/test/html/**

      - name: Compile JAR using shadowJar
        run: ./gradlew shadowJar
        shell: bash

      - name: List JAR Files
        run: ls -la lwjgl3/build/libs/
        shell: bash

      - name: Upload built JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: unisim-a2-lwjgl3-all-${{ matrix.os }}
          path: lwjgl3/build/libs/unisim-a2-lwjgl3-all.jar
